#include "interfaces/Map_Interface.hps"
#include "base/InputHandler_Types.hps"
#include "base/RichPresenceHandler_Types.hps"

#include "helpers/helper_game.hps"
#include "helpers/helper_effects.hps"
#include "helpers/helper_map.hps"
#include "helpers/helper_props.hps"
#include "helpers/helper_audio.hps"
#include "helpers/helper_sequences.hps"
#include "helpers/helper_modules.hps"
#include "helpers/helper_imgui.hps"
#include "helpers/helper_areas.hps"
#include "helpers/helper_ai.hps"
#include "helpers/helper_player.hps"

#include "helper_imgui_station.hps"
#include "helper_imgui_station_app_error.hps"
#include "helper_imgui_station_app_audioplayback.hps"
#include "helper_imgui_station_app_photoviewer.hps"
#include "helper_imgui_cath_portrait.hps"
#include "helper_imgui_station_basics.hps"

#include "helper_custom_depth.hps"
#include "helper_custom_depth_ai.hps"
#include "helper_custom_depth_ai_fleshers.hps"
#include "helper_custom_depth_imgui.hps"
#include "helper_custom_depth_audio.hps"

#include "custom_depth/helper_custom_depth_audio.hps"

#include "helper_font.hps"

//--------------------------------------------------
 
const float gfDofMax = 2.0f;

//--------------------------------------------------

class cScrMap : iScrMap
{
	//--------------------------------------------
 
	//////////////////////////////////////////////////////////////////////////////////////////
	// ==============
	// MAIN CALLBACKS
	// ==============
	//{///////////////////////////////////////////////////////////////////////////////////////
	
	//-------------------------------------------------------
	
	int mlDofID = -1;
	
	//-------------------------------------------------------
	
	////////////////////////////
	// Set up map environment
	void Setup()
	{
		// Set map DoF and such here
		
		Player_SetAmbientLight_Indoors();
	}
	
	//-------------------------------------------------------
	
	void PreloadData()
	{
		/////////////////////////////////
		// PARTICLES CREATED
		/////////////////////////////////
		StationGui_PreloadDefault();
		ParticleSystem_Preload("");
		
		////////////////////////////
		// PLAYER HANDS
		////////////////////////////
		PlayerHands_PreloadHandModel_Diving();
		
		///////////////////////////
		// IMGUI
		///////////////////////////
		OmnitoolGui_Preload();
	}
	
	//-------------------------------------------------------
	
	////////////////////////////
	// Run first time starting map
	void OnStart()
	{
		bool mbIntroRunning = true;
		
		/////////////////////////
		// Player setup
//		Player_SetAmbientLight_Outdoors();
		PlayerHands_SetHandModel_Diving();
		
		PlayerEnergy_SetFlowerSwallows(true);
		
		//Map setup
		
		/////////////////////////
		// Debug
		if(cLux_ScriptDebugOn()) 
		{
//			bDoIntro = false;
		}
		
		if (mbIntroRunning)
		{
			TimerIntro("");
		}
	}

	//-------------------------------------------------------

	////////////////////////////
	// Run when entering map
	void OnEnter()
	{
		Effect_Bloom_FadeBrightPass(0.75f, 2);
		Effect_Bloom_FadeBloomWidth(128, 2);
		Effect_Bloom_FadeBloomFalloff(0.5f, 2);
		Effect_Bloom_FadeBloomTint(1, 1, 1, 2);
		
//		Effect_DoF_Start(0.0f, gfDofMax, 0.5, 0.0);
//		
//		Effect_Bloom_FadeBrightPass(0.00001, 0);
//		Effect_Bloom_FadeBloomWidth(64, 0);
//		Effect_Bloom_FadeBloomTint(0.6, 0.4, 0.4, 0);
//		Effect_RadialBlur_SetDirect(0.1, 0.75, 0.1);
//		
//		Map_SetUnderwater(true);
	}

	//-------------------------------------------------------

	////////////////////////////
	// Run when leaving map
	void OnLeave()
	{
		
	}
	
	//-------------------------------------------------------
	
	void Update(float afTimeStep)
	{
		// RUN RANDOM SCREEN SHAKES HERE WHILE THE PLAYER IS IN DIFFERENT AREAS OF THE MAP
	}

	//-------------------------------------------------------

	////////////////////////////
	// The player has died.
	void OnPlayerKilled(int alRecentDeaths, const tString&in asSource)
	{
	}

	//-------------------------------------------------------

	////////////////////////////
	// To get when player makes input (mostly used for debug)
	void OnAction(int alAction, bool abPressed) 
	{
		if(abPressed==false) return;
		
		if(alAction == eAction_Test1)
		{
		}
		
		if(alAction == eAction_Test2)
		{
		}
		
		if(alAction == eAction_Test3)
		{
		}
		
	}

	//-------------------------------------------------------

	////////////////////////////
	// This only used for pure debug purposes when info needs to printed.
	float DrawDebugOutput(cGuiSet @apSet,iFontData @apFont,float afY)
	{
		//afY = cLux_DrawDebugText("My Debug value:"+..., afY);
		return afY;
	}
	
	//-------------------------------------------------------
	
	tString msMessageText = "";
	float mfMessageTimer = 0.0f;
	
	void DrawText(const tString asString, float afTime = 2.0f)
	{
		msMessageText = asString;
		mfMessageTimer = afTime;
	}
	
	void OnGui(float afTimeStep)
	{
		if (cLux_ScriptDebugOn() == false) return;
		
		cImGuiFont textLineFont;
		textLineFont.mvSize = ImGui_NrmSizeKeepRatio(0.02f);
		textLineFont.mColor = cColor(1.0f, 1.0f, 0.0f, 1.0f);
		// ETA: mbElevatorTremorsAllowed, TUT: TimeUntilTremor, PIES: PlayerInElevatorShaft, 
		//ImGui_DrawFontW("ETA: " + mbElevatorTremorsAllowed + ", TUT: " + (mfTimeRunTremor - mfTremorCounter) + ", PIES: " + mbPlayerInElevatorShaft, textLineFont, ImGui_NrmPos(0.72f, 0.95f, 0.1f), eFontAlign_Left);
		
		if (mfMessageTimer > 0.0f)
		{
			mfMessageTimer -= afTimeStep;
			
			cImGuiTextFrameData textData;
			textData.mColorBase = cColor(0.0f, 0.0f, 0.0f, 0.0f);
			textData.mFont.mvSize = cVector2f(20.0f, 20.0f);
			textData.mFontAlign = eFontAlign_Center;
			
			ImGui_DoTextFrameExt(msMessageText, cVector2f(0.0f, 0.0f), 0.0f, 0.0f, textData, cVector3f(0.0f, ImGui_GetSize().y / 2.0f, 1.0f), cVector2f(ImGui_GetSize().x - 450.0f, 500.0f));
		}
	}
 
	//} END MAIN CALLBACKS

	//////////////////////////////////////////////////////////////////////////////////////////
	// ==============
	// MAIN FUNCTIONS
	// ==============
	//{///////////////////////////////////////////////////////////////////////////////////////
	
	///////////////////////////////
	// Diving suit
	//{////////////////////////////
	
	bool OnCollide_DivingSuitUpdate(const tString &in asParent, const tString &in asChild, int alState)
	{
		cLux_AddDebugMessage(Entity_GetVarString(asChild, ""));
		
		// Make the suit do beeping and booping noises when it updates
		
		return true;
	}
	
	//} END Diving suit
	
	///////////////////////////////
	// Checkpoints
	//{////////////////////////////
	
	//} END Checkpoints
	
	///////////////////////////////
	// Critters
	//{////////////////////////////
	
	//} END Critters
	
	///////////////////////////////
	// Generic timers
	//{////////////////////////////
	
	//-------------------------------------------------------
	
	void TimerEnableInteraction(const tString &in asTimer)
	{
		Entity_SetInteractionDisabled(asTimer, false);
	}
	
	//-------------------------------------------------------
	
	void Timer_RemoveParticleSystem(const tString &in asTimer)
	{
		ParticleSystem_Destroy(asTimer);
	}
	
	//-------------------------------------------------------
	
	void TimerTurnOnEffects(const tString &in asTimer)
	{
		Entity_SetEffectsActive(asTimer, true, false);
	}
	
	//-------------------------------------------------------
	
	void TimerTurnOffEffects(const tString &in asTimer)
	{
		Entity_SetEffectsActive(asTimer, false, false);
	}
	
	//-------------------------------------------------------
	
	void TimerTurnOnLamp(const tString &in asTimer)
	{
		Lamp_SetLit(asTimer, true, true);
	}
	
	//-------------------------------------------------------
	
	void TimerTurnOffLamp(const tString &in asTimer)
	{
		Lamp_SetLit(asTimer, false, true);
	}
	
	//} END Generic timers

	//} END MAIN FUNCTIONS
	
	/////////////////////////////////////////////////////////////////////////////////////////
	// ==============
	// SCENE 1 *INTRO*
	// ==============
	//{//////////////////////////////////////////////////////////////////////////////////////
	
	//-------------------------------------------------------
	
		/////////////////////////////////////////
		// General
		//{//////////////////////////////////////
	
		//} END General
		
		// -- IDEAS --
		// The player will lose their part of their arm just like in the original game (before the suicide, in the station)
		// When the player has stood to close to the ravine for too their suit starts to beep (red around screen at beep)
		// Katebot will go deep into the abyss to repair something, on a terminal the player can see Katebot's position moving (green circle)
		// The signal is cut off (the cirlce no no longer moves/or disappears). The player finds Katebot destroyed or covered in rocks
		// Use 01_03_upsilon_outside/katebot/kate_trapped_alarm to locate Katebot more easily
		// In a later scene Katebot has to sacricife herself so the player can proceed forward.
		
		// Map: 00_00_abyss_intro
		
		// Scene 1 --
		// 04_01_tau_outside/SFX/near_death on obelisk interact
		// 04_01_tau_outside/SFX/ross_death_wake_sweet on leviathan collision
		
		// USEFUL SFX:
		// Use level_amb_shared_underwater/amb/spots/oceanlife/fishes_group_swimming for large sources of bubbling/flowing water
		// 04_01_tau_outside/SFX/near_death on obelisk interact
		// 04_01_tau_outside/SFX/ross_death_wake_sweet on leviathan collision
		// level_amb_shared_underwater/amb/spots/scary/eerie_tone_01 in the background
		// level_amb_shared_underwater/amb/spots/scary/ for scary sounds in the cave
		// Play level_amb_shared_underwater/amb/spots/metal/binaural_roof_screech when approaching Wau (still works in a cave)
		// 04_01_stormstart for long scary moment (when the player enters the area with blood covered walls lit up by a fallen spotlight)
		
		/////////////////////////////////////////
		// SCENE 1 EVENT 1 - *Intro - Start*
		//{///////////////////////////////////////
		
		//-------------------------------------------------------

		// STORY:
		// LOCATION: A space station
		
		// STORY: 
		// The player is on a space station
		// This is set before the events of the main game
		// It's all good
		
		// *An unidentified lifeform has been detected in the ship*
		// The message then disappears (the WAU has internal controls of the ship) - the protagonist still feels he needs to check it out
		
		// The player passes through the room with all the other crew passangers frozen in their pods (look at Alien for inspiration)
		
		// Before he can a large rock passes the sun
		// Have an explosion on earth (use smoke and stuff rising around the area after explosion)
		// The whole screen lights up as the player looks at it
		// The Ship shakes
		// The player falls back
		// The power goes into support mode from the blast
		
		// Go back to several camera perspectives while the power is down (always use the same camera perspectives - the player will see the WAU seed here again IT GROWS EACH TIME)
		// The transmission from the MS CURIE plays from a terminal
		// Lights flicker
		
		// FLASHBACK:
		// Fade in - the player is laying in the bed 
		// The player goes to the lab
		// Interact with the tablet - a message from his daughter (she's dead)
		// Screen goes black
		
		// The player wakes up in reality
		
		// Things have gone to shit, there is a monster on the ship
		// Player gets caught by it
		// The player then wakes up many years later (when the main game's story is set) - the WAU has spread all over the place
		// The ship is running on auxilliary systems on the lowest level (no power only life support and no gravity)
		// The WAU has spread all over the place
		// The monster has actually died
		
		// The player will attempt to make contact with Pathos
		// Then a warning goes of because an object is passing close to the ship
		// The player will see the satellite pass their ship out the window (play 05_02/SFX/sat/fly_out)
		// END
		
		// INTRO:
		
		// Use this to change how gravity affects the player Player_SetGravity(cVector3f(0, 0, 0));
		
		// Text showing what year it is: "2074"
		
		// A still camera perspective starts fades quickly in (look at omicron puzzle and how that works)
		// Cut to several perspectives
		// Something strange can be seen (the seed which will make the monster spawn)
		
		// Then suddenly to the player sitting in a chair
		// A ball rolls on the table slowly - the camera follows
		// The ball falls on the floor
		
		// 1. Lick it.
		// 2. Don't lick it.
		// 3. Lick it, but only a little.
		
		void TimerIntro(const tString &in asTimer)
		{	
			mbIntroRunning = true;
			Map_AddTimer("timer_begin", 0.1f, "TimerBeginSequences");
		
			// Effects for when in player view
			//Effect_ChromaticAberration_StartAnim(8.0f,0.005,0.005,cVector2f_Zero);
			//ffect_ImageTrail_Start(0.08,0.1,7.0,1.0);
		}
		
		// The screaming of the monster
		// The screen fades in quickly with a *whoosh*
		
		// The player is being chased (this is a cinematic)
		// Screen fades in and out into black
		// Eventually the player gets controll
		
		// The player enters a generator room with a collapsed staircase - the player has to climb it (use climb area)
		// The player thinks they are safe after they've climb up but the monster bursts out of a wall - the player has to change direction
		// The player eventually reaches a safe area with a computer
		// The player needs to close the doors through a emergency quarantine using the computer (they're still getting chased)
		
		// The player needs to sit through this quarantine for some time in this safe room - they cannot leave
		// The power eventually breaks as the quarantine is in progress - the lights turn off
		// The computer screen is glitching making the whole room blink in a blue-white color
		// The monster breaks into the room when there is only silence - stinger here
		
		// The player has to run around the monster - the way it came from
		
		//{ THE STORY:
		
		// The player starts in a nest filled with spores
		// Use fog/environmental particles
		
		// Have a section be underwater
		// There are unique visuals that can be used here
		// Have a water floor
		// The player opens a door and what they see is a hole (opening) into the ocean (make this a spectacle)
		
		// THE FEELINGS I WANT TO CONVEY IN THIS GAME:
		// - Clostrophobia
		// - The feeling that the player is inside some kinda cramped submarine
		
		// Maybe give the player dialogue choices?
		// When the player approaches HER the suit updates and warns the player about a dangerous substance
		
		// The player has to kill a robot
		// Lover says on return: "Have you wanted to kill someone before?"
		
		// Have a power outage while talking, make this scary, the player has to hide
		
		// Have some entries about what "Lover" is
		// She is some kind of creation by the WAU
		
		// Find a voice module for her (this will act as TTS)
		// The player has to find the module in a creepy area by connecting to the scan chair
		
		// Lover: "I can't see you..."
		// Player: "I'm shy, plus it's dark."
		// "Sorry."
		
		// Lover: "Could you do me a favor?"
		// Lover: "I can't see you."
		// Player: "How would I do that?"
		// Lover: "How am I supposed to know? Look around or something... 
		// "WELL JUST DO SOMETHING WILL YOU?!"
		// *CONNECTION LOST*
		
		// The player needs to flick a switch or something of the like
		
		// Lover: ""
		
		// Lover: "Do you have a name?"
		// Player: "I don't know."
		// Lover: ""
		
		// Lover: "I can't hear you."
		// Player: "Maybe the cat caught my tounge."
		// 
		
		// Lover: "What do you call someone you care for?"
		// Player: "A lover...?"
		
		// Lover: "Your so far away... I want you to hold me."
		// Player: "..."
		// Lover: "I want you to touch me..."
		
		// Lover: "Put it inside of me."
		
		// Lover: "This might be a bit sudden but... Do you love me?"
		// Player: "I do."
		// Lover: "Then this will hurt."
		
		// THE SHIP:
		// The player gets dragged by a tenctacle into the nest.
		// The player proceeds forward, high tension
		// The path they come from collapses, they are stuck
		// comment_8_firststunrodhit_001_player_001 "oh cmon"
		// Silence for some time
		// A light passes a hole in the hull
		// Then a door gets opened by the KATEBOT
		// YAY
		
		// comment_2_seeskate_notrescued_001_player_001 at Kate rescue
		// dialog_9_katehelpedplayer_001_player_001
		// dialog_9_katehelpedplayer_002_player_001
		// dialog_9_katehelpedplayer_003_player_001
		
		// comment_5_crossingtheabyss_001_player_001 "this better be the right way"
		
		// The player will now proceed to the meteor lab
		
		// THE METEOR CRATER:
		
		// THE LAB:
		
		// The player has low HP (CONVEY THIS WITH SCREEN EFFECTS, AND SO ON)
		// After the player wakes up KATEBOT shows up scanning the environment
		// When it looks at the player it makes some noise *beep* *beep*
		// Lots of smoke and bubbles from fire underwater
		// There are doors to other rooms, but the player cannot enter because of the new pressure (on the other end, water is leaking slightly)
		
		// PICK UP OMNITOOL
		// Terminal A is still running but glitched. The player can see the distance away from Theta (4000+ meters)
		// Play dialogue when the player looks at the completely broken omnitool.
		// Add sparks accompanied with bubbles
		
		// Simon thinks that Cath is completely fucked (but she is still functioning, she will reveal herself in the final scene to be still here)
		// She will say that she is an asshole for losing hope so quickly (fade out to black).
		// Simon says "Catherine...?"
		// She mentions how it felt like the blink of an eye for her, (then run the credits).
		
		// "Gotta talk to Catherine", Simon says
		
		// This is where the story beats about Cath come in
		// The player has to insert the Omnitool
		// This is where to reveal comes
		
		// The other end of the airlock is very dark, the player has to turn on the lights
		// Sparks go all over the place, the station moans and other details, distant clanging
		// Lock player like in dialogue when Simon is trying to talk "to" Catherine and play event_look_at_hands_2_1 or event_look_at_hands_2_1_intense when Simon is angry and sad
		
		// THE PLAYER HAS TO CRAWL THROUGH RUBBLE -- Show where the player has to go with sparks from a cable
		// Crawl through a hole with cables hanging through the hole, on of the cables spark
		
		// KateBot passes the double windows, her light lights up the room helping the player to see since it's so dark
		
		// The player approache the ledge of the meteor crater, the title card appears
		// *accompanied with fitting music*
		// In a simplistic font - think Half Life 2 and the same effect, each letter gets typed out and pulses the color of the WAU at the beginning 
		// Fade in "MOD NAME"
		// Fade out
		// Fade in "Made by, Lucas Pettersson"
		// Fade out
		
		// "CHAPTER NAME"
	
		// While screen is black, Catherine dialogue from Omicron when switching bodies
		// Make the ambience creepy as fuck
		// Black screen, heavy breathing fades in quickly as screen fades in
		// The player wakes up in a scan chair
		// Simon: "Catherine...?"
		// The monster does a sudden noise as almost alerted by Simon's voice
		// Increase player heartbeat
		// The monster moving is breathing while the helmet is still on
		// The player cannot see anything
		//
		
		void SetupIntro()
		{
			// Player intro settings
			Player_SetHealth(0.25f);
			
//			SequenceIntro("");
		}
		
		// Add the heartbeat
		// Do special screen effects every heartbeat
		// Simon emotes (moaning, coughing, groaning)
		// Turn off the emotes during dialogue (use a bool check)
		
		// 04_01_stormstart for long scary moment (when the player enters the area with blood covered walls lit up by a fallen spotlight)
		
		// Play 04_01_tau_outside/SFX/wake_up_sweet on wakeup
		
		// Play 04_01_tau_outside/SFX/near_death because Simon is near death
		
		// Add many stratch, blast, explosion and debris decals on walls/floor
		
		// Start the lightning and thunder as the exact moment the player wakes up
		// Fade in the world sound 0.5f before the lightning strikes making the screen white
		// Use Effect_Flash_Start();
		// Screen fades to white as lightning strikes (The world sound is muffled)
		// KateBot approaches the player *beep* *boop*
		// Player goes out of conciousness
		// A few seconds later
		// Another screen flash (sound no longer muffled)
		// KateBot gone
		// Simon quickly emotes "Ah, god damn it!" from the pain
		// He stands up slowly
		
		// Suit system diagnostics run
		
		// As the player approaches the zeppelin Simon says "Catherine..."
		
		// Play 05_02/SFX/sat/fly_out when the player has stood up
		
		// When player stands on the zeppelin play 04_01_tau_outside/SFX/storm/sweeteners/exit_elevator
		
		// Lock player like in dialogue when talking "to" Catherine
		// At end of dialogue, Simon realizes hes lost his hand (gets a wave of pain --> screen effects + groaning)
		// He inspects it "Oh, fuck...", lightning strikes
		// Simon speaks "I gotta get inside."
		// Now let the player pick up the Omnitool after the short dialogue
		
		// Thunder SFX:
		// 04_01_tau_outside/AMB/storm/thunder/stage_0
		// 04_01_tau_outside/AMB/storm/thunder/stage_0_GuiWorld
		// 04_01_tau_outside/AMB/storm/thunder/stage_1
		// 04_01_tau_outside/AMB/storm/thunder/stage_2
		
		// Reuse the conversation between Simon and Catherine where they talk about how much time passes for her inbetween Omnitool slots
		// This makes the player think of, how much time has passed since the crash?
		
		// After the player has picked up the Omnitool, make the cable spark attracting the players intented path
		// Make a piece of metal fall down and hit the zeppelin which in turn makes it creak and player camrera wobbles
		// The Eastern Zeppelin Platform gets lowered down, so the player gets a new path 
		
		// Have a dramatic reappearance and proper introduction the KateBot when the player is inside the plane
		// IT IS POSSIBLE FOR THE PLAYER TO NOT ENTER THE PLANE AND PROCEED ANYWAY
		// To cover this CASE, I can either kill the player with the Leviathan if they stray from the ship OR make the KateBot show up around a rock after the plane to surprise the player, 
		// when they think they've escape from the Leviathan
		
		// The KateBot guides the player the whole way to the station
		// KateBot *beep-boops* when the meteor crater is revealed, then TITLE CARD
		// By the meteor crater KateBot will stay at the beginning of the bridge, making anxious *beep-boops* once the player enters
		// Outside the station entrance KateBot will spin around in joy saying farewell to the player
		
		// The station here was made to investigate the intense storms
		
		// There is a termial that tracks storm data in realtime
		// There is a WAU heart that is attach close to it
		// The terminal is not working properly and glitching
		// If the player heals themselves with the WAU heart the terminal now functions
		
		// Display data in real time about the storm here
		// The player can rotate the focus area for the relay antenna to investigate different hotspots
		// Have a grid map showing when the player chooses focus area
		// Focus area is chosen with a wheel just like in Delta
		
		// The player has to follow the KateBot to the open area
		// The KateBot is always far enougn so the player can't get a good look on her
		// She spins around the zeppelin and shakes with *beep-boop*
		// Move the map start area further back (cant be far from zeppelin)
		
		// On the path play Cath and Simon dialogue from the zeppelin ride
		
		// The player sees the ship from high above in the spawn area
		
		// The OmniTool is broken so the player has to extract the cortex chip
		// The player will find a functioning OmniTool at the end of the SHIP level
		
		// Skybox color basin: 78E6FFFF / cColor(0.471,0.902,1,1) Brightness: 0.6
		// Skybox color startcliff: 164B5CFF / cColor(0.086,0.294,0.361,1) Brightness: 0.5
		
		cSequenceStatesData mIntroSequence;
		void SequenceIntro(const tString &in asTimer)
		{
			Sequence_Begin("SequenceIntro", mIntroSequence);
			if(Sequence_DoStepAndWait(7.25f))
			{
				Effect_Fade_Out(0);
				
				// Game audio
				Sound_SetGlobalVolume(0.0f);

				// Time till lightning strike has to be 7.25f after the stinger starts
				Sound_CreateAtEntity("IntroStinger", "04_01_tau_outside/SFX/wake_up_sweet", "Player", 0.0f, false, 1.0f);
			}
			else if (Sequence_DoStepAndWait(0.25f))
			{
				Sound_FadeGlobalVolume(1.0f, 0.25f);
				
				// Maybe decrease fade in time???
				Effect_Flash_Start(0.25f, 1.0f, 5.0f);
				Effect_Fade_In(5.0f);
				
				//Lighting strikes here
			}
			else if (Sequence_DoStepAndWait(0.5f))
			{
				
			}
			Sequence_End();
			
		}
		
		//-------------------------------------------------------
		
		//{ -- LEVEL: THE SHIP
		
		// The player approaches the ship at a diagonal (rotate the ship)
		
		// In the first room is a skeleton with the WAU on the body
		// The blue light shines out the skeletons eyes
		
		// The player gets introduced to a puzzle early on
		// The player needs a code to open a door (the player doesn't actually need one, but this entices the player to explore to look for the girl)
		// The player needs to go down some stairs OR a ladder
		// The player then gets a doorway with light coming from the other end (telling the player "GO HERE")
		// In the middle of the room, the player's leg gets grabbed by some screaming creature into the graveyard with skeletons below
		// Bubbles surround the player, and the sound of metal being broken and bent
		
		//--------------------------------
		
		// Inside the crashed plane an old transmission is playing on a loop
		// When the player enters the back of the plane a flashback plays
		// The screen glitches
		// The sound of screaming and a crying baby can be heard
		// The screen flashes to white as the plane lands in the ocean with a splash
		// Everything is now calm
		
		// The player can find a tiny skeleton with a teddy bear beside it
		// Amnesia Rebirth easter egg here
		
		// Have a hole in the hull which leads to a beautiful and tiny cave with dense corals
		
		// Provide some lore about the meteor and why the ship was around this area
		// The people come here to investigate the meteor crash
		// When they arrived something terrible happened
		// The people all died in the ship crash, however the meteor (the WAU) revived them
		// These people continued to live (with terrible complications), with a new god to worship
		
		// The player finds the corpse of the guy that's been leaving the green candle sticks
		// Create a deeper story around this character
		// NOTE 1:
		// "Sesh, what... the... fuck!"
		// "I came all this way to coms... and for what?"
		// "It's fuckin' destroyed!" (voicecrack at "fuckin'")
		// "Agh!" (kicks a some rocks)
		// *breathes heavily*
		// "Damn suit..." (growl)
		// *calms down*
		// *chuckle*
		// "God damn it..." (despair)
		// *cries*
		
		// The meteor is calling for them
		// The people on the boat lose their minds
		// Have a mass grave somewhere lit up with EITHER red light or the blue natural light
		
		// A room where the candle stick guy set up some testing equipment (with a NOTE)
		
		// Inside the cargo bay the ceiling will have to WAU sky (like in Lambda)
		// The floor inside the cargo bay is sand (use the terrain tool)
		// It is also heavily overgrown since it's so close to the graveyard
		// The cargo bay's ceiling has been broken up, so the player can see multiple floor broken apart (in the distant ceiling the player will see the WAU sky)
		
		// Have a WAU tentacle tree somewhere (the player can see it from outside before entering)
		
		// As the player passes through rooms they'll hear whispers and flashbacks to people when they where alive and having a good time
		// Lots of corpses and moss on them, the WAU has also infeltrated the ship
		// The blinking of lightning coming from outside through the circular windows shining on the skeletons
		// Have an area that is calm of the thunderstorm
		
		// The player leaves the ship to enter the graveyard through a hole in the ship's hull
		
		// The KateBot shows itself here scaring the player a little
		// The KateBot passes outside the ship (try to make it scary though)
		// In the large open cargo room KateBot cuts some steel so it falls down almost accidentally killing the player
		// The KateBot opens a locked door for you from the otherside with its blowtorch thingy

		// Two large double doors open a red light is on the other side (use a lensflare to blind player)
		// Have the mass grave here lit only by the red light and some WAU stuff too
		// The whispering of the dead
		// The screen glitches quickly and violently from on a loop
		// The sound of a heartbeat
		// The sound of a constant shrieking lingering in the background
		// As the player enters the graveyard the sound of a creature hissing comes from the distance
		
		//} -- LEVEL: THE SHIP
		
		//{ -- LEVEL: THE GRAVEYARD
		
		// KateBot pans down from behind the ship hull to greet the player and then guides them
		// When the storm gets more intense in the graveyard lightning strikes once close to the player and the KateBot (use the flash screen effect to make the screen flash intensily)
		// Make the player's ears beep as well (look into symptoms of being really close to a lightning strike or directly hit by one)
		// Some rocks explode and hit the KateBot and she crashes
		// KateBot seems no longer function
		// KateBot will show up again as a surprise during the leviathan-plane section
		
		//} -- LEVEL: THE GRAVEYARD
		
		//{ -- LEVEL: THE METEOR CRATER
		
		// The player is guided by the KateBot from the graveyard to a ravine that leads to the crater
		
		// The ravine opens up the player enters from below
		// The storm is completely calm here. The player can hear a distant thunder storm (tau_outside start area sound)
		// They will see all of the thousands of WAU lights covering the meteor
		// Amazing music here
		// ROLL INTRO CARD HERE
		
		// The center of meteor impact area is in the middle (THE WAU LIGHTS ARE DENSE HERE) 
		// Straight across is the station
		// Somewhere lies the elevator
		
		// The entrance to the lab is closed off because of a quarantine (use the omicron quarantine doors to cover the large airlock door and eventually windows)
		
		//} -- LEVEL: THE METEOR CRATER
		
		//{ -- TRAILER SCRIPT AND IDEAS
		
		// https://www.youtube.com/watch?v=4CSYA9R70R8
		
		// Derek Leiu's pacing graph:
		// Cold open
		// Introduction
		// Escalation
		// Climax
		// Button (optional) - add a sense of cute mystery and intrigue (use KateBot for this)
		
		// Music style 
		// Cut to the beat
		// Incorporate SFX
		// Use music to jog inspiration
		
		// Easy to read
		// Cut to the chase
		// Composition
		// Don't make it too flashy
		// Variation in intensity
		
		// Put logos at the end
		
		// At the end of the trailer have the KateBot show up in the final scene *beep-boop* (as the "Button")
		
		//}
		
		//} END Simon wakes up
		
	//} END SCENE 1
	
	/////////////////////////////////////////
	// ==============
	// TERMINALS
	// ==============
	//{//////////////////////////////////////

    /////////////////////////////////////////
    // XX
    /////////////////////////////////////////
 
    //-------------------------------------------------------
	
	/////////////////////////////////////////
	// Terminal *XXX*
	/////////////////////////////////////////

	//-------------------------------------------------------
	
	//-------------------------------------------------------
	
	//} END TERMINALS
	
	/////////////////////////////////////////
	// PRELOADING
	//{///////////////////////////////////////

	//-------------------------------------------------------

	bool PreloadDisabled(bool abCheckIfPreloading = true)
	{
		if(cLux_ScriptDebugOn())
		{
			cLux_AddDebugMessage("PRELOAD DISABLED!"); 
			
			return true;
		}
		
		if(abCheckIfPreloading && Map_IsPreloading() == false)
			return true;
			
		return false;
	}
	
	//-------------------------------------------------------
	
	void TimerBeginPreload(const tString &in asTimer)
	{
		Preload();
	}
	
	//-------------------------------------------------------
	
	//////////////////////
	//Begin preload.
	void Preload()
	{
		if(PreloadDisabled(false)) return;
		cLux_AddDebugMessage("Preloading");
		
//		Map_Preload("00_01_XXX.hpm", eWorldStreamPriority_Low);
	}
	
	//-------------------------------------------------------
	
	//////////////////////
	//Change preload prio to normal
	void PreloadPriorityLow()
	{
		if(PreloadDisabled()) return;
		
		Map_SetPreloadPriority(eWorldStreamPriority_Low);
	}	
	
	//-------------------------------------------------------
	
	//////////////////////
	//Change preload prio to normal
	void PreloadPriorityNormal()
	{
		if(PreloadDisabled()) return;
		
		Map_SetPreloadPriority(eWorldStreamPriority_Normal);
	}
	
	//-------------------------------------------------------
	
	//////////////////////
	//Change preload prio to normal
	void PreloadPriorityVeryHigh()
	{
		if(PreloadDisabled()) return;
		
		Map_SetPreloadPriority(eWorldStreamPriority_VeryHigh);
	}
	
	/////////////////////////////////////////////////////////////////////////////////////////
	// ==============
	// AUDIO
	// ==============
	//{//////////////////////////////////////////////////////////////////////////////////////
	
	//-------------------------------------------------------
	
	void AudioManager()
	{
		
	}
	
	//-------------------------------------------------------
	
	//} END AUDIO
}